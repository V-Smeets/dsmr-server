/**
 * MIT License
 *
 * Copyright (c) 2024 Vincent Smeets
 */

#include "p1_record.h"

#include <gtest/gtest.h>

namespace dsmr_server {
namespace {

TEST(P1RecordTest, correctRawP1Record) {
  std::string expected(
      "/ISK5\\2M550E-1011\r\n"
      "\r\n"
      "1-3:0.2.8(50)\r\n"
      "0-0:1.0.0(241005141634S)\r\n"
      "0-0:96.1.1(4530303333303036393736373132373137)\r\n"
      "1-0:1.8.1(003344.001*kWh)\r\n"
      "1-0:1.8.2(002507.696*kWh)\r\n"
      "1-0:2.8.1(000000.000*kWh)\r\n"
      "1-0:2.8.2(000000.000*kWh)\r\n"
      "0-0:96.14.0(0001)\r\n"
      "1-0:1.7.0(00.016*kW)\r\n"
      "1-0:2.7.0(00.000*kW)\r\n"
      "0-0:96.7.21(00013)\r\n"
      "0-0:96.7.9(00005)\r\n"
      "1-0:99.97.0(3)(0-0:96.7.19)(200518205045S)(0000002965*s)(230531120550S)("
      "0000001144*s)(231112085438W)(0000005587*s)\r\n"
      "1-0:32.32.0(00021)\r\n"
      "1-0:32.36.0(00002)\r\n"
      "0-0:96.13.0()\r\n"
      "1-0:32.7.0(243.1*V)\r\n"
      "1-0:31.7.0(000*A)\r\n"
      "1-0:21.7.0(00.015*kW)\r\n"
      "1-0:22.7.0(00.000*kW)\r\n"
      "0-1:24.1.0(003)\r\n"
      "0-1:96.1.0(4730303339303031383032303434353138)\r\n"
      "0-1:24.2.1(241005141500S)(03801.583*m3)\r\n"
      "!DEC2\r\n");

  RawP1Record p1Record(expected);

  EXPECT_EQ(expected, p1Record.toString());
}

TEST(P1RecordTest, incorrectStart) {
  std::string expected(
      "Dummy\r\n"
      "/ISK5\\2M550E-1011\r\n"
      "\r\n"
      "1-3:0.2.8(50)\r\n"
      "0-0:1.0.0(241005141634S)\r\n"
      "0-0:96.1.1(4530303333303036393736373132373137)\r\n"
      "1-0:1.8.1(003344.001*kWh)\r\n"
      "1-0:1.8.2(002507.696*kWh)\r\n"
      "1-0:2.8.1(000000.000*kWh)\r\n"
      "1-0:2.8.2(000000.000*kWh)\r\n"
      "0-0:96.14.0(0001)\r\n"
      "1-0:1.7.0(00.016*kW)\r\n"
      "1-0:2.7.0(00.000*kW)\r\n"
      "0-0:96.7.21(00013)\r\n"
      "0-0:96.7.9(00005)\r\n"
      "1-0:99.97.0(3)(0-0:96.7.19)(200518205045S)(0000002965*s)(230531120550S)("
      "0000001144*s)(231112085438W)(0000005587*s)\r\n"
      "1-0:32.32.0(00021)\r\n"
      "1-0:32.36.0(00002)\r\n"
      "0-0:96.13.0()\r\n"
      "1-0:32.7.0(243.1*V)\r\n"
      "1-0:31.7.0(000*A)\r\n"
      "1-0:21.7.0(00.015*kW)\r\n"
      "1-0:22.7.0(00.000*kW)\r\n"
      "0-1:24.1.0(003)\r\n"
      "0-1:96.1.0(4730303339303031383032303434353138)\r\n"
      "0-1:24.2.1(241005141500S)(03801.583*m3)\r\n"
      "!DEC2\r\n");

  EXPECT_THROW({ RawP1Record p1Record(expected); }, std::invalid_argument);
}

TEST(P1RecordTest, incorrectEnd) {
  std::string expected(
      "/ISK5\\2M550E-1011\r\n"
      "\r\n"
      "1-3:0.2.8(50)\r\n"
      "0-0:1.0.0(241005141634S)\r\n"
      "0-0:96.1.1(4530303333303036393736373132373137)\r\n"
      "1-0:1.8.1(003344.001*kWh)\r\n"
      "1-0:1.8.2(002507.696*kWh)\r\n"
      "1-0:2.8.1(000000.000*kWh)\r\n"
      "1-0:2.8.2(000000.000*kWh)\r\n"
      "0-0:96.14.0(0001)\r\n"
      "1-0:1.7.0(00.016*kW)\r\n"
      "1-0:2.7.0(00.000*kW)\r\n"
      "0-0:96.7.21(00013)\r\n"
      "0-0:96.7.9(00005)\r\n"
      "1-0:99.97.0(3)(0-0:96.7.19)(200518205045S)(0000002965*s)(230531120550S)("
      "0000001144*s)(231112085438W)(0000005587*s)\r\n"
      "1-0:32.32.0(00021)\r\n"
      "1-0:32.36.0(00002)\r\n"
      "0-0:96.13.0()\r\n"
      "1-0:32.7.0(243.1*V)\r\n"
      "1-0:31.7.0(000*A)\r\n"
      "1-0:21.7.0(00.015*kW)\r\n"
      "1-0:22.7.0(00.000*kW)\r\n"
      "0-1:24.1.0(003)\r\n"
      "0-1:96.1.0(4730303339303031383032303434353138)\r\n"
      "0-1:24.2.1(241005141500S)(03801.583*m3)\r\n"
      "XXXXX\r\n");

  EXPECT_THROW({ RawP1Record p1Record(expected); }, std::invalid_argument);
}

TEST(P1RecordTest, incorrectChecksum) {
  std::string expected(
      "/ISK5\\2M550E-1011\r\n"
      "\r\n"
      "1-3:0.2.8(50)\r\n"
      "0-0:1.0.0(241005141634S)\r\n"
      "0-0:96.1.1(4530303333303036393736373132373137)\r\n"
      "1-0:1.8.1(003344.001*kWh)\r\n"
      "1-0:1.8.2(002507.696*kWh)\r\n"
      "1-0:2.8.1(000000.000*kWh)\r\n"
      "1-0:2.8.2(000000.000*kWh)\r\n"
      "0-0:96.14.0(0001)\r\n"
      "1-0:1.7.0(00.016*kW)\r\n"
      "1-0:2.7.0(00.000*kW)\r\n"
      "0-0:96.7.21(00013)\r\n"
      "0-0:96.7.9(00005)\r\n"
      "1-0:99.97.0(3)(0-0:96.7.19)(200518205045S)(0000002965*s)(230531120550S)("
      "0000001144*s)(231112085438W)(0000005587*s)\r\n"
      "1-0:32.32.0(00021)\r\n"
      "1-0:32.36.0(00002)\r\n"
      "0-0:96.13.0()\r\n"
      "1-0:32.7.0(243.1*V)\r\n"
      "1-0:31.7.0(000*A)\r\n"
      "1-0:21.7.0(00.015*kW)\r\n"
      "1-0:22.7.0(00.000*kW)\r\n"
      "0-1:24.1.0(003)\r\n"
      "0-1:96.1.0(4730303339303031383032303434353138)\r\n"
      "0-1:24.2.1(241005141500S)(03801.583*m3)\r\n"
      "!1234\r\n");

  EXPECT_THROW({ RawP1Record p1Record(expected); }, std::invalid_argument);
}

} // namespace
} // namespace dsmr_server
